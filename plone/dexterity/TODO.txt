Dexterity To-Do List
====================

 plone.dexterity
 ---------------
  
    General
    ~~~~~~~
  
    - Improve test coverage
    - Improve documentation
  
    Schema and FTI
    ~~~~~~~~~~~~~~
    
    - Consider whether we want to be able to look up schema by adapter,
      rather than asking the FTI directly.
        - May be more useful to have a separate concept of a composite schema
          since a schema provided by the type implies attribute access and a
          "flat" namespace.
        - Schema probably needs to be closely tied to model and FTI in almost
          all cases.
      
    - Need to formalise "schema extender" functionality.
        - Needs to tie in with fieldset support in forms
        - Does this happen only at the form/view level?
  
    - Factory needs to initialise instance security based on schema
    
    - Need to handle case where portal is renamed and/or FTI is renamed.
      In both cases, the prefix+portal type name encoded in the schema name 
      may cause problems. Ergo, we probably want a better way to map a named
      schema (which may not exist yet) to an actual FTI instance for looking
      up the model.
      
        - perhaps we can keep "ghost FTI" utilities around until a new one
          is registered for the same name?
        
    Views
    ~~~~~
 
    - Add plone.supermodel metadata handlers for widget hints
    - Support fields from behaviors in add/edit forms
    
    Misc
    ~~~~
    
    - Provide support for various types of migration when FTIs change, e.g.
      swapping from one FTI to another or changing a model significantly.
    
    - Flesh out examples and possibly add convenience APIs for:
        - Type installed with GS, no filesystem component
        - Type installed with GS, filesystem interface
        - Type installed with GS, filesystem interface and type class
        - Type installed with GS, filesystem interface, type class and views
 
 plone.app.dexterity
 -------------------
 
    - Better views for IDexterityItem and IDexterityContainer
    - Provide optional standard Ploneish metadata fieldsets for add/edit forms
    - Make content types support title-to-id, perhaps via behaviors
    
    - UI for building schemata
    - UI for view customisation
        - Write out a "flat" template that includes all current fields
        - Register with portal_view_customizations
    
 Integration concerns
 --------------------
 
    - Need a reference engine, widget (plone.app.relations)
    - Need versioning with version-on-save (CMFEditions policy)
    - Need content staging (iterate needs to stop using AT references)
    - Need link integrity (ditto for plone.linkintegrity)
    - Need inline validation (have this for formlib, not z3c.form)
    - Need inline editing (have this for formlib, not z3c.form)