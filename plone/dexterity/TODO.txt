Dexterity To-Do List
====================

 Areas that need ownership
 -------------------------
 
    [ ] Schema composition and fieldsets in forms, integration with 
        plone.behavior
    
    [ ] Field-level security
    
    [ ] i18n support in schema
    
    [ ] Schema editor and Plone control panel
    
    [ ] Reference engine integration
    
    [ ] Versioning and staging integration

 plone.dexterity
 ---------------

    Schema and FTI
    ~~~~~~~~~~~~~~

    [*] Factory and class grokker need to initialise field level security
        based on schema
        
        - There is an attempt at this in security.py, but it doesn't seem to
          make any difference. The usage is factory.py is currently commented
          out.

    [ ] Finish support for multiple schemata in a model file. Schemata
        other than the default should be registered as adapters and use
        annotations for storage. The adapter should be generic so that we
        do not need to sync schemata if they change.

    [ ] Need to handle case where portal is renamed and/or FTI is renamed.
        In both cases, the prefix+portal type name encoded in the schema name 
        may cause problems. Ergo, we probably want a better way to map a named
        schema (which may not exist yet) to an actual FTI instance for looking
        up the model.
      
        - perhaps we can keep "ghost FTI" utilities around until a new one
          is registered for the same name?
        
    Views
    ~~~~~
 
    [*] Add, edit forms need better buttons
    [*] Edit form should go to view after save
    [*] Use 'widget' model metadata in forms to set up widgets
    
    [*] Support fieldsets and externalised field ordering in forms
    [*] Support fields from behaviors in forms
    
    Misc
    ~~~~
    
    [ ] Need to properly support i18n in model file
    
    [ ] Provide support for various types of migration when FTIs change, e.g.
        swapping from one FTI to another or changing a model significantly.
     
 plone.app.dexterity
 -------------------
 
    [ ] Better views for IDexterityItem and IDexterityContainer
    [ ] Provide optional standard Ploneish metadata fieldsets for add/edit 
        forms (should be implemented as a behaviour)
    [ ] Make content types support title-to-id (again, should be a behaviour)
    
    [ ] UI for managing types, importing, exporting etc.
    [ ] UI for building schemata
    [ ] UI for view customisation
        - Write out a "flat" template that includes all current fields
        - Register with portal_view_customizations
    
 Integration concerns
 --------------------
 
    - Need a reference engine, widget (plone.app.relations - fields/widgets)
    - Need versioning with version-on-save (CMFEditions policy - behavior)
    - Need content staging (iterate w/o AT references - behavior)
    - Need link integrity (linkintegrity w/o AT references - behavior)
    - Need inline validation (have this for formlib, not z3c.form)
    - Need inline editing (have this for formlib, not z3c.form)